#version 400
layout(triangles, equal_spacing, ccw) in;
in vec3 tcPosition[];
in vec3 tcNormal[];
in vec2 tcTexCoord0[];
in vec4 tcColor[];

out vec4 teVertexEyeDir;
out vec3 teNormal;
out vec2 teTexCoord0;
out vec4 teColor;
uniform mat4x4 MMatrix;
uniform mat4x4 MVPMatrix;

void main()
{

	vec3 world_pos = gl_TessCoord.x*tcPosition[0]
			 +gl_TessCoord.y*tcPosition[1]
			 +gl_TessCoord.z*tcPosition[2];
    gl_Position = MVPMatrix* vec4(world_pos, 1.0);
	teVertexEyeDir = MMatrix * vec4(world_pos, 1.0);
	vec3 Normal=gl_TessCoord.x*tcNormal[0]
			 +gl_TessCoord.y*tcNormal[1]
			 +gl_TessCoord.z*tcNormal[2];
	teNormal=(MMatrix * vec4(Normal, 0.0)).xyz;

	teTexCoord0=gl_TessCoord.x*tcTexCoord0[0]
			 +gl_TessCoord.y*tcTexCoord0[1]
			 +gl_TessCoord.z*tcTexCoord0[2];
			 
	teColor=gl_TessCoord.x*tcColor[0]
			 +gl_TessCoord.y*tcColor[1]
			 +gl_TessCoord.z*tcColor[2];
}